/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-01 08:40:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.layout;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.dao.MemberDao;

public final class title_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("data.dao.MemberDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.0.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Dongle&family=Gaegu:wght@700&family=Nanum+Pen+Script&family=Single+Day&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("#loginbtn, #logoutbtn {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 150px;\r\n");
      out.write("	left: 1800px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#loginname{\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 200px;\r\n");
      out.write("	left: 1700px;\r\n");
      out.write("	color:white;\r\n");
      out.write("	z-index: 1;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");

//절대경로잡기
String root = request.getContextPath();

//로그인세션
String loginok = (String) session.getAttribute("loginok");
//아이디얻기
String myid = (String) session.getAttribute("myid");
//dao에서 이름얻기
MemberDao dao = new MemberDao();
String name = dao.getName(myid);

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<a href=\"");
      out.print(root);
      out.write("\" style=\"text-decoration: none\">\r\n");
      out.write("	<img src=\"");
      out.print(root);
      out.write("/image/1.png\" width=\"160\" height=\"200\"\r\n");
      out.write("		style=\"z-index: 0\">\r\n");
      out.write("	<img src=\"");
      out.print(root);
      out.write("/image/2.png\" width=\"160\" height=\"200\"\r\n");
      out.write("		style=\"z-index: 0\">\r\n");
      out.write("	<img src=\"");
      out.print(root);
      out.write("/image/3.png\" width=\"160\" height=\"200\"\r\n");
      out.write("		style=\"z-index: 0\">\r\n");
      out.write("	<img src=\"");
      out.print(root);
      out.write("/image/4.png\" width=\"160\" height=\"200\"\r\n");
      out.write("		style=\"z-index: 0\">\r\n");
      out.write("	<img src=\"");
      out.print(root);
      out.write("/image/5.png\" width=\"160\" height=\"200\"\r\n");
      out.write("		style=\"z-index: 0\">\r\n");
      out.write("	<img src=\"");
      out.print(root);
      out.write("/image/6.png\" width=\"160\" height=\"200\"\r\n");
      out.write("		style=\"z-index: 0\">\r\n");
      out.write("	<img src=\"");
      out.print(root);
      out.write("/image/7.png\" width=\"160\" height=\"200\"\r\n");
      out.write("		style=\"z-index: 0\">\r\n");
      out.write("	<img src=\"");
      out.print(root);
      out.write("/image/8.png\" width=\"160\" height=\"200\"\r\n");
      out.write("		style=\"z-index: 0\">\r\n");
      out.write("	<img src=\"");
      out.print(root);
      out.write("/image/9.png\" width=\"160\" height=\"200\"\r\n");
      out.write("		style=\"z-index: 0\">\r\n");
      out.write("	<img src=\"");
      out.print(root);
      out.write("/image/10.png\" width=\"160\" height=\"200\"\r\n");
      out.write("		style=\"z-index: 0\">\r\n");
      out.write("	<img src=\"");
      out.print(root);
      out.write("/image/11.png\" width=\"160\" height=\"200\"\r\n");
      out.write("		style=\"z-index: 0\">\r\n");
      out.write("</a>\r\n");
      out.write("	");

	if (loginok == null) {
	
      out.write("\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-success\"\r\n");
      out.write("		style=\"width: 100px; z-index: 1\"\r\n");
      out.write("		onclick=\"location.href='index.jsp?main=login/loginform.jsp'\"\r\n");
      out.write("		id=\"loginbtn\">Login</button>\r\n");
      out.write("	");

	} else {
	
      out.write("\r\n");
      out.write("	<div id=\"loginname\"><b>");
      out.print(name);
      out.write("님 로그인 중...</b></div>\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-danger\"\r\n");
      out.write("		style=\"width: 100px; z-index: 1\"\r\n");
      out.write("		onclick=\"location.href='index.jsp?main=login/logoutaction.jsp'\"\r\n");
      out.write("		id=\"logoutbtn\">Logout</button>\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
