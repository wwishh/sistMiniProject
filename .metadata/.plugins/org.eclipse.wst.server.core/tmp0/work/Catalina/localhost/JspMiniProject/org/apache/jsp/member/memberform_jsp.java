/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-08-23 07:45:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.0.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Dongle&family=Gaegu:wght@700&family=Nanum+Pen+Script&family=Single+Day&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("	\r\n");
      out.write("	//id중복체크\r\n");
      out.write("	$(\"#btncheck\").click(function(){\r\n");
      out.write("		\r\n");
      out.write("		//id읽기\r\n");
      out.write("		var id = $(\"#id\").val();\r\n");
      out.write("		//alert(id);\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			url:\"member/idsearch.jsp\",\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			data:{\"id\":id},\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				//alert(data.count);\r\n");
      out.write("				if(data.count==1){\r\n");
      out.write("					//alert(\"이미 가입된 아이디 입니다\\n다시 입력해주세요\");\r\n");
      out.write("					$(\"span.idsuccess\").text(\"fail\");\r\n");
      out.write("					$(\"#id\").val(\"\");\r\n");
      out.write("				}else{\r\n");
      out.write("					//alert(\"사용 가능한 아이디 입니다\");\r\n");
      out.write("					$(\"span.idsuccess\").text(\"success\");\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	//선택 이메일 주소 넣기..혹은 직접입력\r\n");
      out.write("	$(\"#selemail\").change(function(){\r\n");
      out.write("		var sel = $(this).val();\r\n");
      out.write("		\r\n");
      out.write("		if(sel == \"-\"){\r\n");
      out.write("			$(\"#email2\").val(\"\");\r\n");
      out.write("			$(\"#email2\").focus();\r\n");
      out.write("		}\r\n");
      out.write("		else{\r\n");
      out.write("			$(\"#email2\").val(sel);\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function check(f){\r\n");
      out.write("	if(f.pass.value!=f.pass2.value){\r\n");
      out.write("		alert(\"비밀번호가 서로 다릅니다\");\r\n");
      out.write("		f.pass.value = \"\";\r\n");
      out.write("		f.pass.value2 = \"\";\r\n");
      out.write("		\r\n");
      out.write("		return false; //action이 호출되지 않는다\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<form action=\"member/memberproc.jsp\" method=\"post\" onsubmit=\"return check(this)\">\r\n");
      out.write("		<table class=\"table table-bordered\" style=\"width: 500px;\">\r\n");
      out.write("			<caption align=\"top\">\r\n");
      out.write("				<b>회원가입</b>\r\n");
      out.write("			</caption>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th style=\"width: 100px; background-color: pink\">아이디</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"id\" id=\"id\" class=\"form-group\"\r\n");
      out.write("					required=\"required\" style=\"width: 120px\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-danger btn-sm\" id=\"btncheck\">중복체크</button>\r\n");
      out.write("					<span class=\"idsuccess\"></span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th style=\"width: 100px; background-color: pink\">비밀번호</th>\r\n");
      out.write("				<td><input type=\"password\" name=\"pass\" placeholder=\"비밀번호\" class=\"form-group\"\r\n");
      out.write("					required=\"required\" style=\"width: 120px\">\r\n");
      out.write("					<input type=\"password\" name=\"pass2\" placeholder=\"비밀번호 확인\" class=\"form-group\"\r\n");
      out.write("					required=\"required\" style=\"width: 120px\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th style=\"width: 100px; background-color: pink\">회원명</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"name\" placeholder=\"이름\" class=\"form-group\"\r\n");
      out.write("					required=\"required\" style=\"width: 120px\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th style=\"width: 100px; background-color: pink\">핸드폰</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"hp\" placeholder=\"핸드폰번호\" class=\"form-group\"\r\n");
      out.write("					required=\"required\" style=\"width: 200px\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th style=\"width: 100px; background-color: pink\">주소</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"addr\" placeholder=\"주소\" class=\"form-group\"\r\n");
      out.write("					required=\"required\" style=\"width: 350px\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th style=\"width: 100px; background-color: pink\">이메일</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"email1\" class=\"form-group\"\r\n");
      out.write("					required=\"required\" style=\"width: 120px\">\r\n");
      out.write("					<b>@</b>\r\n");
      out.write("					<input type=\"text\" name=\"email2\" id=\"email2\"\r\n");
      out.write("					required=\"required\" style=\"width:120px\" value=\"\">\r\n");
      out.write("					\r\n");
      out.write("					<select id=\"selemail\">\r\n");
      out.write("					<option value=\"-\">직접입력</option>\r\n");
      out.write("					<option value=\"naver.com\">네이버</option>\r\n");
      out.write("					<option value=\"gmail.com\">구글</option>\r\n");
      out.write("					<option value=\"hanmail.net\">다음</option>\r\n");
      out.write("					<option value=\"nate.com\">네이트</option>\r\n");
      out.write("					</select>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td colspan=\"2\" align='center'>\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-outline-info\" style=\"width:100px\">회원가입</button>\r\n");
      out.write("				<button type=\"reset\" class=\"btn btn-outline-info\" style=\"width:100px\">초기화</button>\r\n");
      out.write("			</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
